# OpenWeatherMap configuration
[openweathermap]
# Enable / disable OpenWeatherMap integration
enabled = true

# Register at https://openweathermap.org to get your API key
# Use one of the following forms to set your API key:
# api_key = "file:~/your_folder/some-key.txt"   # Read from a file
api_key = "env:OWM_API_KEY"                   # Read from an environment variable
# api_key = "PLAINTEXT_VALUE"                   # Read the value directly

# This is for Buenos Aires, find your city at https://openweathermap.org
# The id will be the last part of the URL
city_id = "3435910"
# How long weather notifications should stay up (in seconds)
notification_timeout = 10
# When notifications are sent, the notification title comes from OpenWeatherMap
# You can customize the message body, or use "" to leave it blank
notification_body = "Expected within the next 3 hours"
# How often should we fetch weather data (in seconds)
# Will default to 10 min for values under 10 min (600 seconds)
sync_frequency = 600 # 10 minutes
# Output format, using Handlebars syntax, meaning variables should be used like {{ this }}
# Available tokens are:
# - temp_celsius
# - temp_kelvin
# - temp_fahrenheit
# - temp_icon
# - trend
# - forecast_celsius
# - forecast_kelvin
# - forecast_fahrenheit
# - forecast_icon
display = "{{ temp_icon }} {{ temp_celsius }}°C {{ trend }} {{ forecast_icon }} {{ forecast_celsius }}°C"

# GitHub configuration
[github]
# Enable / disable GitHub integration
enabled = false
# Go to https://github.com/settings/tokens
# Click on "Generate a new token", give it a name and check the "notifications" checkbox
# Use one of the following forms to set your token:
# api_key = "file:~/your_folder/some-token.txt"   # Read from a file
# api_key = "env:GITHUB_TOKEN"                    # Read from an environment variable
# api_key = "PLAINTEXT_VALUE"                     # Read the value directly
api_key = "file:~/.config/ntfd/github.txt"
# How long GitHub notifications should stay up (in seconds)
notification_timeout = 20
# Whether or not the organization/owner avatar should be shown in the notification
show_avatar = true
# How often should we fetch from the GitHub API (in seconds)
# Will default to 10 seconds for values under 10 seconds
sync_frequency = 30
# Output format, using Handlebars syntax, meaning variables should be used like {{ this }}
# Available tokens are:
# - unread_count
# - first_time_count
display = " {{ unread_count }}"

# MPD configuration
[mpd]
# Enable / disable mpd integration
enabled = false
# Top level directory containing your MPD collection
# Should be the same value as "music_directory" from your mpd.conf
music_directory = "/mnt/media/music"
# How long MPD notifications should stay up (in seconds)
notification_timeout = 10
# Cover art files should have standardized names and formats within your collection
# Specify the file name we should look for here
cover_name = "cover.jpg"
# When this is enabled, songs with missing cover image will not trigger a notification
skip_missing_cover = true
